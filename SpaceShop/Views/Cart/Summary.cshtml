@using SpaceShop_ViewModels;
@using SpaceShop_Utility;
@model ProductUserViewModel
@{
    double totalProductsPrice = 0;
}
<h1> Summary </h1>


<form asp-action="InquiryConfirmation" id="payment-form">

    <!-- User -->
    <p>
        <label>Name</label>
        <input type="text" asp-for="@Model.ApplicationUser.FullName" class="form-control" />
        <span asp-validation-for="ApplicationUser.FullName" class="text-danger"></span>
    </p>

    <p>
        <label>Phone</label>
        <input type="text" asp-for="@Model.ApplicationUser.PhoneNumber" required class="form-control"/>
        <span asp-validation-for="ApplicationUser.PhoneNumber" class="text-danger"></span>
    </p>

    <p>
        <label>Email</label>
        <input type="text" asp-for="@Model.ApplicationUser.Email" required class="form-control" />
        <span asp-validation-for="ApplicationUser.Email" class="text-danger"></span>
    </p>

    <!--Address-->
    <p>
        <label>City</label>
        <input type="text" asp-for="@Model.ApplicationUser.City" class="form-control" />
        <span asp-validation-for="ApplicationUser.City" class="text-danger"></span>
    </p>
    <p>
        <label>Street</label>
        <input type="text" asp-for="@Model.ApplicationUser.Street" class="form-control" />
        <span asp-validation-for="ApplicationUser.Street" class="text-danger"></span>
    </p>
    <p>
        <label>House</label>
        <input type="text" asp-for="@Model.ApplicationUser.House" class="form-control" />
        <span asp-validation-for="ApplicationUser.House" class="text-danger"></span>
    </p>
    <p>
        <label>Apartment</label>
        <input type="text" asp-for="@Model.ApplicationUser.Apartment" class="form-control" />
        <span asp-validation-for="ApplicationUser.Apartment" class="text-danger"></span>
    </p>
    <p>
        <label>Postal Code</label>
        <input type="text" asp-for="@Model.ApplicationUser.PostalCode" class="form-control" />
        <span asp-validation-for="ApplicationUser.PostalCode" class="text-danger"></span>
    </p>

    <!-- Products -->
    @for (int i = 0; i < Model.ProductList.Count(); i++)
    {
        <input type="hidden" asp-for="@Model.ProductList[i].Id" asp-route-ProductIds/>
        <input type="hidden" asp-for="@Model.ProductList[i].Price" />
        <input type="hidden" asp-for="@Model.ProductList[i].TempCount" asp-route-ProductIds />
        <p>
            Product Name: @Model.ProductList[i].Name
        </p>
        <p>
            Count: @Model.ProductList[i].TempCount
        </p>
        <p>
            Price: @Model.ProductList[i].Price
        </p>
        <p>
            Total Price: @(Model.ProductList[i].Price * Model.ProductList[i].TempCount)
        </p>
        totalProductsPrice += Model.ProductList[i].Price * Model.ProductList[i].TempCount;
    }
    <h3>
        Total Products Price: @totalProductsPrice
    </h3>
        <div class="checkout container">
            <div id="dropin-container"></div>
            <input id="nonce" name="payment_method_nonce" type="hidden" />
        </div>

    @if (User.IsInRole(SpaceShop_Utility.PathManager.AdminRole))
    {
        <p>
            <button type="submit" class="btn btn-primary form-control" onclick="return funcValidation()">
                Submit Order
            </button>
        </p>
    }
    else
    {
        <p>
            <button type="submit" class="btn btn-success form-control" onclick="return funcValidation()">
                Submit Query
            </button>
        </p>
    }

</form>
@section Scripts{
    @{
    <partial name="_ValidationScriptsPartial" />


    <script src="https://js.braintreegateway.com/web/dropin/1.34.0/js/dropin.min.js"></script>

    <script>
                            var tokenClient = "@ViewBag.TokenClient";
                            var form = document.querySelector('#payment-form');
                            // подключение для braintree
                            braintree.dropin.create({
                                authorization: tokenClient,
                                container: '#dropin-container'
                            },
                                // первый параметр для ошибки, второй - экземпляр подключения
                                function (error, dropinInstance) {
                                    // тут происходит обработка события
                                    form.addEventListener('submit', function () {
                                        // блочим автоматическую передачу формы
                                        event.preventDefault();
                                        // добавить nonce в форму и затем отправить ее
                                        dropinInstance.requestPaymentMethod(function (err, payload) {
                                            // отправить nonce на наш сервер
                                            document.querySelector('#nonce').value = payload.nonce;
                                            form.submit();
                                        })
                                    })
                                });

                            function funcValidation() {
                                var full_name = document.getElementById("ApplicationUser_FullName").value;
                                var phone = document.getElementById("ApplicationUser_PhoneNumber").value;
                                var email = document.getElementById("ApplicationUser_Email").value;
                                var city = document.getElementById("ApplicationUser_City").value;
                                var street = document.getElementById("ApplicationUser_Street").value;
                                var house = document.getElementById("ApplicationUser_House").value;
                                var apartment = document.getElementById("ApplicationUser_Apartment").value;
                                var postal_code = document.getElementById("ApplicationUser_PostalCode").value;
                                if (full_name == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите имя!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (phone == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите телефон!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (email == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите email!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (city == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите город!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (street == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите улицу!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (house == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите дом!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (apartment == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите квартиру!',
                                        'error'
                                    )
                                    return false;
                                }
                                if (postal_code == '') {
                                    Swal.fire(
                                        'Error!',
                                        'Пожалуйста, введите почтовый индекс!',
                                        'error'
                                    )
                                    return false;
                                }
                                return true;
                            }
    </script>
    }
}